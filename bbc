repeat task.wait() until (Player.Character:FindFirstChild("FULLY_LOADED_CHAR"))
pcall(function()
    local a = game:GetService("ReplicatedStorage").MainEvent
    local b = {"CHECKER_1", "TeleportDetect", "OneMoreTime"}
    local c
    c = hookmetamethod(game, "__namecall", function(...)
        local d = {...}
        local self = d[1]
        local e = getnamecallmethod()
        local f = getcallingscript()
        if e == "FireServer" and self == a and table.find(b, d[2]) then
            return
        end
        return c(...)
    end)
end)
task.wait(1)

Player.Idled:Connect(function()
    for i = 1, 10 do
        game:GetService("VirtualUser"):Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        task.wait(0.2)
        game:GetService("VirtualUser"):Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        task.wait(0.2)
    end
end)

for i = 1, 10 do
    setfpscap(tonumber(_G.AutofarmSettings.Fps))
    task.wait(0.1)
end

game:GetService("RunService"):Set3dRenderingEnabled(false)
pcall(function()
    UserSettings().GameSettings.MasterVolume = 0
end)
pcall(function()
    settings().Rendering.QualityLevel = "Level01"
end)

task.spawn(function()
    for i, v in pairs(workspace:GetDescendants()) do
        if v:IsA("Seat") or v:IsA("VehicleSeat") then
            v:Destroy()
        end
    end
end)

local StartedWith = Player.DataFolder.Currency.Value
local Cashier, Dist, Index = nil, 0, 0
local StartTick = os.time()
local Shutdown = false
local Unarresting = false
local LastLog = os.time() + 3
local BrokenATMs = 0

local Log = function(Msg)
    print(os.date("%X") .. " | iku autofarm - " .. Msg)
end

local IsDead = function()
    return Player.Character:FindFirstChild("Humanoid") == nil or Player.Character.Humanoid.Health <= 0
end

local GetMag = function(Part)
    if not Part then
        return 0
    end
    return (Part.Position - Player.Character:WaitForChild("Head").Position).Magnitude
end

local ToCurrency = function(Num)
    return tostring(Num):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

local Update = function()
    USER.Text = "| Username - @" .. Player.Name
    WALLET.Text = "| Wallet - $" .. ToCurrency(Player.DataFolder.Currency.Value)
    PROFIT.Text = "| Profit - $" .. ToCurrency(Player.DataFolder.Currency.Value - StartedWith)
    TIMER.Text = "| Passed - " .. string.format("%02i:%02i:%02i", (os.time() - StartTick) / 60 ^ 2, (os.time() - StartTick) / 60 % 60, (os.time() - StartTick) % 60)
    BROKEN.Text = "| ATMs - " .. tostring(BrokenATMs)

    for i, v in pairs(Cashiers:GetChildren()) do
        local Point = MAP:FindFirstChild("P-" .. tostring(i))

        if Point then
            if v.Humanoid.Health > 0 then
                Point.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
            end

            if v.Humanoid.Health <= 0 then
                Point.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            end

            if v == Cashier then
                Point.BackgroundColor3 = Color3.fromRGB(200, 200, 0)

                TOOLTIP.ZIndex = 10
                TOOLTIP.Visible = true
                game:GetService("TweenService"):Create(TOOLTIP, TweenInfo.new(0.33, Enum.EasingStyle.Quad), { Position = Point.Position + UDim2.new(-0.008, 0, 0, 0) }):Play()
                CURRATM.Text = "ATM " .. tostring(i)
                HPT.Text = tostring(math.floor(v.Humanoid.Health)) .. "/100"

                game:GetService("TweenService"):Create(HP, TweenInfo.new(0.33, Enum.EasingStyle.Quad), { Size = (UDim2.new(math.max(math.floor(v.Humanoid.Health) / 100, 0), 0, 1, 0)) }):Play()

            end
        else
            Log("error finding P-" .. tostring(i) .. ".")
        end
    end
end

local GetCashier = function()
    local Cashier, Index = nil, 0
    for i, v in pairs(Cashiers:GetChildren()) do
        if v.Humanoid.Health > 0 then
            if Cashier == nil then
                Cashier = v
            else
                if GetMag(v.Head) < GetMag(Cashier.Head) then
                    Cashier = v
                    Index = i
                end
            end
        end
    end

    if Cashier ~= nil then
        return Cashier, GetMag(Cashier.Head), Index
    else
        return nil
    end
end

local GetCloseCash = function()
    local Am = 0

    for i, v in pairs(workspace.Ignored.Drop:GetChildren()) do
        if v.Name == "MoneyDrop" and v:FindFirstChild("ClickDetector") and GetMag(v) < 17 then
            Am += 1
        end
    end
    return Am
end

